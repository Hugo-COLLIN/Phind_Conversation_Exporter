name: Publish Browser Extension

on:
  push:
    branches:
      - publish

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build extension
        run: npm run prod

      - name: Prepare source code zip
        run: zip -r releases/save-my-phind_${{ github.run_number }}_firefox_source.zip src/

#      - name: Browser Platform Publish
#        uses: PlasmoHQ/bpp@v3.6.1
#        with:
#          keys: ${{ secrets.BPP_KEYS }}

      - name: Get version from package.json
        id: package_version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Create Tag
        run: git tag v${{ steps.package_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Tag
        run: git push origin v${{ steps.package_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          release_name: v${{ steps.package_version.outputs.version }}
          body: ${{ steps.github_release.outputs.changelog }}
          draft: true
          prerelease: false
          discussion_category_name: "Releases"

      - name: Upload Release Asset Chrome
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/save-my-phind_${{ steps.package_version.outputs.version }}_chrome.zip
          asset_name: save-my-phind_${{ steps.package_version.outputs.version }}_chrome.zip
          asset_content_type: application/zip

      - name: Upload Release Asset Firefox
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/save-my-phind_${{ steps.package_version.outputs.version }}_firefox.zip
          asset_name: save-my-phind_${{ steps.package_version.outputs.version }}_firefox.zip
          asset_content_type: application/zip
